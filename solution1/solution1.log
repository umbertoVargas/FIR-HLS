==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'fir/fir_filter.cpp' ... 
ERROR: [HLS 200-70] Compilation errors found: In file included from fir/fir_filter.cpp:1:
In file included from fir/fir_filter.cpp:8:
fir/fir_filter.h:8:9: error: unknown type name 'int32'
typedef int32 coef_t;
        ^
fir/fir_filter.h:9:9: error: unknown type name 'int32'
typedef int32 data_t;
        ^
fir/fir_filter.h:10:9: error: unknown type name 'int64'
typedef int64 acc_t;
        ^
3 errors generated.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'fir/fir_filter.cpp' ... 
ERROR: [HLS 200-70] Compilation errors found: In file included from fir/fir_filter.cpp:1:
In file included from fir/fir_filter.cpp:8:
fir/fir_filter.h:8:9: error: unknown type name 'int32'
typedef int32 coef_t;
        ^
fir/fir_filter.h:9:9: error: unknown type name 'int32'
typedef int32 data_t;
        ^
fir/fir_filter.h:10:9: error: unknown type name 'int64'
typedef int64 acc_t;
        ^
3 errors generated.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] CSim file generation failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'fir/fir_filter.cpp' ... 
ERROR: [HLS 200-70] Compilation errors found: In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:53:15: error: no matching conversion for C-style cast from 'ap_axis<32, 0, 0, 0>' to 'acc_t' (aka 'ap_int<64>')
  acc_left += (acc_t) datain * (acc_t) c[0];
              ^~~~~~~~~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:62:8: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'const ap_int<64>' for 1st argument; 
struct ap_int : ap_int_base<_AP_W, true> {
       ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:154:41: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'bool' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(bool val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:155:41: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:156:41: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'signed char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(signed char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:157:41: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'unsigned char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:158:41: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'short' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(short val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:159:41: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'unsigned short' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned short val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:160:41: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'int' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(int val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:161:41: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'unsigned int' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned int val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:162:41: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'long' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(long val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:163:41: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'unsigned long' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned long val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:164:41: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'ap_slong' (aka 'long long') for 1st argument; 
  inline __attribute__((always_inline)) ap_int(ap_slong val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:165:41: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'ap_ulong' (aka 'unsigned long long') for 1st argument; 
  inline __attribute__((always_inline)) ap_int(ap_ulong val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:167:3: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'double' for 1st argument; 
  ap_int(double val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:168:3: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'float' for 1st argument; 
  ap_int(float val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:169:3: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'half' for 1st argument; 
  ap_int(half val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:172:41: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'const char *' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(const char* s) : Base(s) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:67:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_int<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:72:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const volatile ap_int<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:77:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_uint<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:82:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const volatile ap_uint<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:96:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_range_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:99:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_bit_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:102:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>& ref)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:107:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_fixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:112:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_ufixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:118:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:124:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:130:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_int_base<_AP_W2, _AP_S2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:136:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:142:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:148:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:65:41: note: candidate constructor not viable: requires 0 arguments, but 1 was provided
  inline __attribute__((always_inline)) ap_int() : Base() {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:174:41: note: candidate constructor not viable: requires 2 arguments, but 1 was provided
  inline __attribute__((always_inline)) ap_int(const char* s, signed char rd) : Base(s, rd) {}
                                        ^
In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:54:21: error: no viable overloaded '='
  shift_reg_left[0] = datain;
  ~~~~~~~~~~~~~~~~~ ^ ~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:179:49: note: candidate function not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'const ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) ap_int& operator=(const ap_int<_AP_W>& op2) {
                                                ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:185:49: note: candidate function not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'const volatile ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) ap_int& operator=(const volatile ap_int<_AP_W>& op2) {
                                                ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:191:46: note: candidate function not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'const ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) void operator=(const ap_int<_AP_W>& op2) volatile { Base::V = op2.V; }
                                             ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:193:46: note: candidate function not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'const volatile ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) void operator=(const volatile ap_int<_AP_W>& op2) volatile {
                                             ^
In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:73:16: error: no matching conversion for C-style cast from 'ap_axis<32, 0, 0, 0>' to 'acc_t' (aka 'ap_int<64>')
  acc_right += (acc_t) datain* (acc_t) c[0];
               ^~~~~~~~~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:62:8: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'const ap_int<64>' for 1st argument; 
struct ap_int : ap_int_base<_AP_W, true> {
       ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:154:41: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'bool' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(bool val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:155:41: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:156:41: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'signed char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(signed char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:157:41: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'unsigned char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:158:41: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'short' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(short val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:159:41: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'unsigned short' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned short val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:160:41: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'int' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(int val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:161:41: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'unsigned int' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned int val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:162:41: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'long' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(long val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:163:41: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'unsigned long' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned long val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:164:41: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'ap_slong' (aka 'long long') for 1st argument; 
  inline __attribute__((always_inline)) ap_int(ap_slong val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:165:41: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'ap_ulong' (aka 'unsigned long long') for 1st argument; 
  inline __attribute__((always_inline)) ap_int(ap_ulong val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:167:3: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'double' for 1st argument; 
  ap_int(double val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:168:3: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'float' for 1st argument; 
  ap_int(float val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:169:3: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'half' for 1st argument; 
  ap_int(half val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:172:41: note: candidate constructor not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'const char *' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(const char* s) : Base(s) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:67:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_int<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:72:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const volatile ap_int<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:77:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_uint<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:82:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const volatile ap_uint<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:96:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_range_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:99:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_bit_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:102:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>& ref)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:107:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_fixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:112:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_ufixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:118:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:124:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:130:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_int_base<_AP_W2, _AP_S2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:136:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:142:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:148:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:65:41: note: candidate constructor not viable: requires 0 arguments, but 1 was provided
  inline __attribute__((always_inline)) ap_int() : Base() {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:174:41: note: candidate constructor not viable: requires 2 arguments, but 1 was provided
  inline __attribute__((always_inline)) ap_int(const char* s, signed char rd) : Base(s, rd) {}
                                        ^
In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:74:22: error: no viable overloaded '='
  shift_reg_right[0] = datain;
  ~~~~~~~~~~~~~~~~~~ ^ ~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:179:49: note: candidate function not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'const ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) ap_int& operator=(const ap_int<_AP_W>& op2) {
                                                ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:185:49: note: candidate function not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'const volatile ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) ap_int& operator=(const volatile ap_int<_AP_W>& op2) {
                                                ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:191:46: note: candidate function not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'const ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) void operator=(const ap_int<_AP_W>& op2) volatile { Base::V = op2.V; }
                                             ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:193:46: note: candidate function not viable: no known conversion from 'ap_axis<32, 0, 0, 0>' to 'const volatile ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) void operator=(const volatile ap_int<_AP_W>& op2) volatile {
                                             ^
In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:77:10: error: no viable overloaded '='
  dataout= acc_right >> 15;
  ~~~~~~~^ ~~~~~~~~~~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot\ap_axi_sdata.h:100:10: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'typename ap_int_base<64, true>::RType<64, true>::arg1' (aka 'ap_int<64>') to 'const ap_axis<32, 0, 0, 0>' for 1st argument; 
  struct ap_axis <D, 0, 0, 0>{
         ^
5 errors generated.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'fir/fir_filter.cpp' ... 
ERROR: [HLS 200-70] Compilation errors found: In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:60:15: error: no matching conversion for C-style cast from 'ap_axis_custom' to 'acc_t' (aka 'ap_int<64>')
  acc_left += (acc_t) datain[0] * (acc_t) c[0];
              ^~~~~~~~~~~~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:62:8: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<64>' for 1st argument; 
struct ap_int : ap_int_base<_AP_W, true> {
       ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:154:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'bool' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(bool val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:155:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:156:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'signed char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(signed char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:157:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:158:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'short' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(short val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:159:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned short' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned short val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:160:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'int' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(int val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:161:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned int' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned int val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:162:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'long' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(long val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:163:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned long' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned long val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:164:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'ap_slong' (aka 'long long') for 1st argument; 
  inline __attribute__((always_inline)) ap_int(ap_slong val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:165:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'ap_ulong' (aka 'unsigned long long') for 1st argument; 
  inline __attribute__((always_inline)) ap_int(ap_ulong val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:167:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'double' for 1st argument; 
  ap_int(double val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:168:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'float' for 1st argument; 
  ap_int(float val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:169:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'half' for 1st argument; 
  ap_int(half val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:172:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'const char *' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(const char* s) : Base(s) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:67:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_int<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:72:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const volatile ap_int<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:77:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_uint<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:82:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const volatile ap_uint<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:96:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_range_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:99:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_bit_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:102:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>& ref)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:107:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_fixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:112:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_ufixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:118:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:124:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:130:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_int_base<_AP_W2, _AP_S2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:136:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:142:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:148:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:65:41: note: candidate constructor not viable: requires 0 arguments, but 1 was provided
  inline __attribute__((always_inline)) ap_int() : Base() {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:174:41: note: candidate constructor not viable: requires 2 arguments, but 1 was provided
  inline __attribute__((always_inline)) ap_int(const char* s, signed char rd) : Base(s, rd) {}
                                        ^
In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:61:21: error: no viable overloaded '='
  shift_reg_left[0] = datain[0];
  ~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:179:49: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) ap_int& operator=(const ap_int<_AP_W>& op2) {
                                                ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:185:49: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const volatile ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) ap_int& operator=(const volatile ap_int<_AP_W>& op2) {
                                                ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:191:46: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) void operator=(const ap_int<_AP_W>& op2) volatile { Base::V = op2.V; }
                                             ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:193:46: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const volatile ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) void operator=(const volatile ap_int<_AP_W>& op2) volatile {
                                             ^
In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:64:11: error: assigning to 'ap_axis_custom *' from incompatible type 'typename ap_int_base<64, true>::RType<64, true>::arg1' (aka 'ap_int<64>')
  dataout = acc_left >> 15;
          ^ ~~~~~~~~~~~~~~
fir/fir_filter.cpp:80:16: error: no matching conversion for C-style cast from 'ap_axis_custom' to 'acc_t' (aka 'ap_int<64>')
  acc_right += (acc_t) datain[1]* (acc_t) c[0];
               ^~~~~~~~~~~~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:62:8: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<64>' for 1st argument; 
struct ap_int : ap_int_base<_AP_W, true> {
       ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:154:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'bool' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(bool val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:155:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:156:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'signed char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(signed char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:157:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:158:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'short' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(short val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:159:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned short' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned short val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:160:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'int' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(int val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:161:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned int' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned int val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:162:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'long' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(long val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:163:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned long' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned long val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:164:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'ap_slong' (aka 'long long') for 1st argument; 
  inline __attribute__((always_inline)) ap_int(ap_slong val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:165:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'ap_ulong' (aka 'unsigned long long') for 1st argument; 
  inline __attribute__((always_inline)) ap_int(ap_ulong val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:167:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'double' for 1st argument; 
  ap_int(double val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:168:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'float' for 1st argument; 
  ap_int(float val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:169:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'half' for 1st argument; 
  ap_int(half val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:172:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'const char *' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(const char* s) : Base(s) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:67:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_int<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:72:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const volatile ap_int<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:77:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_uint<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:82:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const volatile ap_uint<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:96:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_range_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:99:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_bit_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:102:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>& ref)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:107:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_fixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:112:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_ufixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:118:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:124:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:130:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_int_base<_AP_W2, _AP_S2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:136:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:142:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:148:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:65:41: note: candidate constructor not viable: requires 0 arguments, but 1 was provided
  inline __attribute__((always_inline)) ap_int() : Base() {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:174:41: note: candidate constructor not viable: requires 2 arguments, but 1 was provided
  inline __attribute__((always_inline)) ap_int(const char* s, signed char rd) : Base(s, rd) {}
                                        ^
In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:81:22: error: no viable overloaded '='
  shift_reg_right[0] = datain[1];
  ~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:179:49: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) ap_int& operator=(const ap_int<_AP_W>& op2) {
                                                ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:185:49: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const volatile ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) ap_int& operator=(const volatile ap_int<_AP_W>& op2) {
                                                ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:191:46: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) void operator=(const ap_int<_AP_W>& op2) volatile { Base::V = op2.V; }
                                             ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:193:46: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const volatile ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) void operator=(const volatile ap_int<_AP_W>& op2) volatile {
                                             ^
In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:84:11: error: assigning to 'ap_axis_custom *' from incompatible type 'typename ap_int_base<64, true>::RType<64, true>::arg1' (aka 'ap_int<64>')
  dataout = acc_right >> 15;
          ^ ~~~~~~~~~~~~~~~
6 errors generated.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'fir/fir_filter.cpp' ... 
ERROR: [HLS 200-70] Compilation errors found: In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:60:15: error: no matching conversion for C-style cast from 'ap_axis_custom' to 'acc_t' (aka 'ap_int<64>')
  acc_left += (acc_t) datain[0] * (acc_t) c[0];
              ^~~~~~~~~~~~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:62:8: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<64>' for 1st argument; 
struct ap_int : ap_int_base<_AP_W, true> {
       ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:154:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'bool' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(bool val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:155:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:156:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'signed char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(signed char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:157:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:158:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'short' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(short val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:159:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned short' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned short val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:160:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'int' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(int val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:161:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned int' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned int val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:162:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'long' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(long val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:163:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned long' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned long val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:164:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'ap_slong' (aka 'long long') for 1st argument; 
  inline __attribute__((always_inline)) ap_int(ap_slong val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:165:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'ap_ulong' (aka 'unsigned long long') for 1st argument; 
  inline __attribute__((always_inline)) ap_int(ap_ulong val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:167:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'double' for 1st argument; 
  ap_int(double val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:168:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'float' for 1st argument; 
  ap_int(float val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:169:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'half' for 1st argument; 
  ap_int(half val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:172:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'const char *' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(const char* s) : Base(s) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:67:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_int<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:72:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const volatile ap_int<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:77:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_uint<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:82:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const volatile ap_uint<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:96:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_range_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:99:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_bit_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:102:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>& ref)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:107:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_fixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:112:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_ufixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:118:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:124:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:130:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_int_base<_AP_W2, _AP_S2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:136:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:142:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:148:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:65:41: note: candidate constructor not viable: requires 0 arguments, but 1 was provided
  inline __attribute__((always_inline)) ap_int() : Base() {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:174:41: note: candidate constructor not viable: requires 2 arguments, but 1 was provided
  inline __attribute__((always_inline)) ap_int(const char* s, signed char rd) : Base(s, rd) {}
                                        ^
In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:61:21: error: no viable overloaded '='
  shift_reg_left[0] = datain[0];
  ~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:179:49: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) ap_int& operator=(const ap_int<_AP_W>& op2) {
                                                ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:185:49: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const volatile ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) ap_int& operator=(const volatile ap_int<_AP_W>& op2) {
                                                ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:191:46: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) void operator=(const ap_int<_AP_W>& op2) volatile { Base::V = op2.V; }
                                             ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:193:46: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const volatile ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) void operator=(const volatile ap_int<_AP_W>& op2) volatile {
                                             ^
In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:64:11: error: assigning to 'ap_axis_custom *' from incompatible type 'typename ap_int_base<64, true>::RType<64, true>::arg1' (aka 'ap_int<64>')
  dataout = acc_left >> 15;
          ^ ~~~~~~~~~~~~~~
fir/fir_filter.cpp:80:16: error: no matching conversion for C-style cast from 'ap_axis_custom' to 'acc_t' (aka 'ap_int<64>')
  acc_right += (acc_t) datain[1]* (acc_t) c[0];
               ^~~~~~~~~~~~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:62:8: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<64>' for 1st argument; 
struct ap_int : ap_int_base<_AP_W, true> {
       ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:154:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'bool' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(bool val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:155:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:156:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'signed char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(signed char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:157:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:158:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'short' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(short val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:159:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned short' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned short val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:160:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'int' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(int val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:161:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned int' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned int val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:162:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'long' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(long val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:163:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned long' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned long val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:164:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'ap_slong' (aka 'long long') for 1st argument; 
  inline __attribute__((always_inline)) ap_int(ap_slong val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:165:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'ap_ulong' (aka 'unsigned long long') for 1st argument; 
  inline __attribute__((always_inline)) ap_int(ap_ulong val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:167:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'double' for 1st argument; 
  ap_int(double val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:168:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'float' for 1st argument; 
  ap_int(float val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:169:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'half' for 1st argument; 
  ap_int(half val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:172:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'const char *' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(const char* s) : Base(s) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:67:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_int<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:72:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const volatile ap_int<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:77:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_uint<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:82:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const volatile ap_uint<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:96:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_range_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:99:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_bit_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:102:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>& ref)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:107:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_fixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:112:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_ufixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:118:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:124:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:130:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_int_base<_AP_W2, _AP_S2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:136:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:142:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:148:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:65:41: note: candidate constructor not viable: requires 0 arguments, but 1 was provided
  inline __attribute__((always_inline)) ap_int() : Base() {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:174:41: note: candidate constructor not viable: requires 2 arguments, but 1 was provided
  inline __attribute__((always_inline)) ap_int(const char* s, signed char rd) : Base(s, rd) {}
                                        ^
In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:81:22: error: no viable overloaded '='
  shift_reg_right[0] = datain[1];
  ~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:179:49: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) ap_int& operator=(const ap_int<_AP_W>& op2) {
                                                ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:185:49: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const volatile ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) ap_int& operator=(const volatile ap_int<_AP_W>& op2) {
                                                ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:191:46: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) void operator=(const ap_int<_AP_W>& op2) volatile { Base::V = op2.V; }
                                             ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:193:46: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const volatile ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) void operator=(const volatile ap_int<_AP_W>& op2) volatile {
                                             ^
In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:84:11: error: assigning to 'ap_axis_custom *' from incompatible type 'typename ap_int_base<64, true>::RType<64, true>::arg1' (aka 'ap_int<64>')
  dataout = acc_right >> 15;
          ^ ~~~~~~~~~~~~~~~
6 errors generated.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'fir/fir_filter.cpp' ... 
ERROR: [HLS 200-70] Compilation errors found: In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:60:15: error: no matching conversion for C-style cast from 'ap_axis_custom' to 'acc_t' (aka 'ap_int<64>')
  acc_left += (acc_t) datain[0] * (acc_t) c[0];
              ^~~~~~~~~~~~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:62:8: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<64>' for 1st argument; 
struct ap_int : ap_int_base<_AP_W, true> {
       ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:154:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'bool' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(bool val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:155:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:156:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'signed char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(signed char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:157:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:158:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'short' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(short val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:159:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned short' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned short val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:160:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'int' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(int val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:161:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned int' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned int val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:162:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'long' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(long val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:163:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned long' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned long val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:164:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'ap_slong' (aka 'long long') for 1st argument; 
  inline __attribute__((always_inline)) ap_int(ap_slong val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:165:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'ap_ulong' (aka 'unsigned long long') for 1st argument; 
  inline __attribute__((always_inline)) ap_int(ap_ulong val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:167:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'double' for 1st argument; 
  ap_int(double val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:168:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'float' for 1st argument; 
  ap_int(float val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:169:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'half' for 1st argument; 
  ap_int(half val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:172:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'const char *' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(const char* s) : Base(s) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:67:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_int<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:72:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const volatile ap_int<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:77:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_uint<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:82:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const volatile ap_uint<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:96:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_range_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:99:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_bit_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:102:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>& ref)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:107:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_fixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:112:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_ufixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:118:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:124:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:130:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_int_base<_AP_W2, _AP_S2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:136:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:142:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:148:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:65:41: note: candidate constructor not viable: requires 0 arguments, but 1 was provided
  inline __attribute__((always_inline)) ap_int() : Base() {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:174:41: note: candidate constructor not viable: requires 2 arguments, but 1 was provided
  inline __attribute__((always_inline)) ap_int(const char* s, signed char rd) : Base(s, rd) {}
                                        ^
In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:61:21: error: no viable overloaded '='
  shift_reg_left[0] = datain[0];
  ~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:179:49: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) ap_int& operator=(const ap_int<_AP_W>& op2) {
                                                ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:185:49: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const volatile ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) ap_int& operator=(const volatile ap_int<_AP_W>& op2) {
                                                ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:191:46: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) void operator=(const ap_int<_AP_W>& op2) volatile { Base::V = op2.V; }
                                             ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:193:46: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const volatile ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) void operator=(const volatile ap_int<_AP_W>& op2) volatile {
                                             ^
In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:64:14: error: no viable overloaded '='
  dataout[0] = acc_left >> 15;
  ~~~~~~~~~~ ^ ~~~~~~~~~~~~~~
fir/fir_filter.cpp:10:8: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'typename ap_int_base<64, true>::RType<64, true>::arg1' (aka 'ap_int<64>') to 'const ap_axis_custom' for 1st argument; 
struct ap_axis_custom
       ^
fir/fir_filter.cpp:80:16: error: no matching conversion for C-style cast from 'ap_axis_custom' to 'acc_t' (aka 'ap_int<64>')
  acc_right += (acc_t) datain[1]* (acc_t) c[0];
               ^~~~~~~~~~~~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:62:8: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<64>' for 1st argument; 
struct ap_int : ap_int_base<_AP_W, true> {
       ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:154:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'bool' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(bool val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:155:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:156:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'signed char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(signed char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:157:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:158:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'short' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(short val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:159:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned short' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned short val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:160:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'int' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(int val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:161:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned int' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned int val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:162:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'long' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(long val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:163:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned long' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned long val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:164:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'ap_slong' (aka 'long long') for 1st argument; 
  inline __attribute__((always_inline)) ap_int(ap_slong val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:165:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'ap_ulong' (aka 'unsigned long long') for 1st argument; 
  inline __attribute__((always_inline)) ap_int(ap_ulong val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:167:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'double' for 1st argument; 
  ap_int(double val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:168:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'float' for 1st argument; 
  ap_int(float val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:169:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'half' for 1st argument; 
  ap_int(half val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:172:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'const char *' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(const char* s) : Base(s) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:67:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_int<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:72:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const volatile ap_int<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:77:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_uint<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:82:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const volatile ap_uint<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:96:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_range_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:99:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_bit_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:102:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>& ref)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:107:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_fixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:112:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_ufixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:118:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:124:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:130:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_int_base<_AP_W2, _AP_S2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:136:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:142:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:148:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:65:41: note: candidate constructor not viable: requires 0 arguments, but 1 was provided
  inline __attribute__((always_inline)) ap_int() : Base() {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:174:41: note: candidate constructor not viable: requires 2 arguments, but 1 was provided
  inline __attribute__((always_inline)) ap_int(const char* s, signed char rd) : Base(s, rd) {}
                                        ^
In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:81:22: error: no viable overloaded '='
  shift_reg_right[0] = datain[1];
  ~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:179:49: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) ap_int& operator=(const ap_int<_AP_W>& op2) {
                                                ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:185:49: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const volatile ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) ap_int& operator=(const volatile ap_int<_AP_W>& op2) {
                                                ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:191:46: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) void operator=(const ap_int<_AP_W>& op2) volatile { Base::V = op2.V; }
                                             ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:193:46: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const volatile ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) void operator=(const volatile ap_int<_AP_W>& op2) volatile {
                                             ^
In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:84:14: error: no viable overloaded '='
  dataout[1] = acc_right >> 15;
  ~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~
fir/fir_filter.cpp:10:8: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'typename ap_int_base<64, true>::RType<64, true>::arg1' (aka 'ap_int<64>') to 'const ap_axis_custom' for 1st argument; 
struct ap_axis_custom
       ^
6 errors generated.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'fir/fir_filter.cpp' ... 
ERROR: [HLS 200-70] Compilation errors found: In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:60:15: error: no matching conversion for C-style cast from 'ap_axis_custom' to 'acc_t' (aka 'ap_int<64>')
  acc_left += (acc_t) datain[0] * (acc_t) c[0];
              ^~~~~~~~~~~~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:62:8: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<64>' for 1st argument; 
struct ap_int : ap_int_base<_AP_W, true> {
       ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:154:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'bool' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(bool val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:155:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:156:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'signed char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(signed char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:157:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:158:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'short' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(short val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:159:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned short' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned short val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:160:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'int' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(int val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:161:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned int' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned int val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:162:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'long' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(long val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:163:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned long' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned long val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:164:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'ap_slong' (aka 'long long') for 1st argument; 
  inline __attribute__((always_inline)) ap_int(ap_slong val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:165:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'ap_ulong' (aka 'unsigned long long') for 1st argument; 
  inline __attribute__((always_inline)) ap_int(ap_ulong val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:167:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'double' for 1st argument; 
  ap_int(double val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:168:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'float' for 1st argument; 
  ap_int(float val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:169:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'half' for 1st argument; 
  ap_int(half val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:172:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'const char *' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(const char* s) : Base(s) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:67:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_int<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:72:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const volatile ap_int<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:77:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_uint<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:82:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const volatile ap_uint<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:96:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_range_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:99:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_bit_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:102:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>& ref)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:107:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_fixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:112:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_ufixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:118:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:124:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:130:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_int_base<_AP_W2, _AP_S2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:136:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:142:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:148:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:65:41: note: candidate constructor not viable: requires 0 arguments, but 1 was provided
  inline __attribute__((always_inline)) ap_int() : Base() {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:174:41: note: candidate constructor not viable: requires 2 arguments, but 1 was provided
  inline __attribute__((always_inline)) ap_int(const char* s, signed char rd) : Base(s, rd) {}
                                        ^
In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:61:21: error: no viable overloaded '='
  shift_reg_left[0] = datain[0];
  ~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:179:49: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) ap_int& operator=(const ap_int<_AP_W>& op2) {
                                                ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:185:49: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const volatile ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) ap_int& operator=(const volatile ap_int<_AP_W>& op2) {
                                                ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:191:46: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) void operator=(const ap_int<_AP_W>& op2) volatile { Base::V = op2.V; }
                                             ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:193:46: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const volatile ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) void operator=(const volatile ap_int<_AP_W>& op2) volatile {
                                             ^
In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:64:14: error: no viable overloaded '='
  dataout[0] = acc_left >> 15;
  ~~~~~~~~~~ ^ ~~~~~~~~~~~~~~
fir/fir_filter.cpp:10:8: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'typename ap_int_base<64, true>::RType<64, true>::arg1' (aka 'ap_int<64>') to 'const ap_axis_custom' for 1st argument; 
struct ap_axis_custom
       ^
fir/fir_filter.cpp:80:16: error: no matching conversion for C-style cast from 'ap_axis_custom' to 'acc_t' (aka 'ap_int<64>')
  acc_right += (acc_t) datain[1]* (acc_t) c[0];
               ^~~~~~~~~~~~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:62:8: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<64>' for 1st argument; 
struct ap_int : ap_int_base<_AP_W, true> {
       ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:154:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'bool' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(bool val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:155:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:156:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'signed char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(signed char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:157:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:158:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'short' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(short val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:159:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned short' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned short val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:160:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'int' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(int val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:161:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned int' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned int val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:162:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'long' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(long val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:163:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned long' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned long val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:164:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'ap_slong' (aka 'long long') for 1st argument; 
  inline __attribute__((always_inline)) ap_int(ap_slong val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:165:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'ap_ulong' (aka 'unsigned long long') for 1st argument; 
  inline __attribute__((always_inline)) ap_int(ap_ulong val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:167:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'double' for 1st argument; 
  ap_int(double val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:168:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'float' for 1st argument; 
  ap_int(float val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:169:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'half' for 1st argument; 
  ap_int(half val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:172:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'const char *' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(const char* s) : Base(s) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:67:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_int<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:72:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const volatile ap_int<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:77:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_uint<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:82:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const volatile ap_uint<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:96:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_range_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:99:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_bit_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:102:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>& ref)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:107:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_fixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:112:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_ufixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:118:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:124:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:130:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_int_base<_AP_W2, _AP_S2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:136:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:142:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:148:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:65:41: note: candidate constructor not viable: requires 0 arguments, but 1 was provided
  inline __attribute__((always_inline)) ap_int() : Base() {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:174:41: note: candidate constructor not viable: requires 2 arguments, but 1 was provided
  inline __attribute__((always_inline)) ap_int(const char* s, signed char rd) : Base(s, rd) {}
                                        ^
In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:81:22: error: no viable overloaded '='
  shift_reg_right[0] = datain[1];
  ~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:179:49: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) ap_int& operator=(const ap_int<_AP_W>& op2) {
                                                ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:185:49: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const volatile ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) ap_int& operator=(const volatile ap_int<_AP_W>& op2) {
                                                ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:191:46: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) void operator=(const ap_int<_AP_W>& op2) volatile { Base::V = op2.V; }
                                             ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:193:46: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const volatile ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) void operator=(const volatile ap_int<_AP_W>& op2) volatile {
                                             ^
In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:84:14: error: no viable overloaded '='
  dataout[1] = acc_right >> 15;
  ~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~
fir/fir_filter.cpp:10:8: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'typename ap_int_base<64, true>::RType<64, true>::arg1' (aka 'ap_int<64>') to 'const ap_axis_custom' for 1st argument; 
struct ap_axis_custom
       ^
6 errors generated.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'fir/fir_filter.cpp' ... 
ERROR: [HLS 200-70] Compilation errors found: In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:60:15: error: no matching conversion for C-style cast from 'ap_axis_custom' to 'acc_t' (aka 'ap_int<64>')
  acc_left += (acc_t) datain[0] * (acc_t) c[0];
              ^~~~~~~~~~~~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:62:8: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<64>' for 1st argument; 
struct ap_int : ap_int_base<_AP_W, true> {
       ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:154:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'bool' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(bool val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:155:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:156:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'signed char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(signed char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:157:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:158:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'short' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(short val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:159:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned short' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned short val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:160:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'int' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(int val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:161:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned int' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned int val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:162:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'long' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(long val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:163:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned long' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned long val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:164:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'ap_slong' (aka 'long long') for 1st argument; 
  inline __attribute__((always_inline)) ap_int(ap_slong val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:165:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'ap_ulong' (aka 'unsigned long long') for 1st argument; 
  inline __attribute__((always_inline)) ap_int(ap_ulong val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:167:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'double' for 1st argument; 
  ap_int(double val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:168:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'float' for 1st argument; 
  ap_int(float val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:169:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'half' for 1st argument; 
  ap_int(half val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:172:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'const char *' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(const char* s) : Base(s) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:67:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_int<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:72:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const volatile ap_int<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:77:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_uint<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:82:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const volatile ap_uint<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:96:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_range_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:99:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_bit_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:102:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>& ref)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:107:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_fixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:112:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_ufixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:118:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:124:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:130:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_int_base<_AP_W2, _AP_S2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:136:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:142:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:148:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:65:41: note: candidate constructor not viable: requires 0 arguments, but 1 was provided
  inline __attribute__((always_inline)) ap_int() : Base() {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:174:41: note: candidate constructor not viable: requires 2 arguments, but 1 was provided
  inline __attribute__((always_inline)) ap_int(const char* s, signed char rd) : Base(s, rd) {}
                                        ^
In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:61:21: error: no viable overloaded '='
  shift_reg_left[0] = datain[0];
  ~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:179:49: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) ap_int& operator=(const ap_int<_AP_W>& op2) {
                                                ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:185:49: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const volatile ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) ap_int& operator=(const volatile ap_int<_AP_W>& op2) {
                                                ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:191:46: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) void operator=(const ap_int<_AP_W>& op2) volatile { Base::V = op2.V; }
                                             ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:193:46: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const volatile ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) void operator=(const volatile ap_int<_AP_W>& op2) volatile {
                                             ^
In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:64:14: error: no viable overloaded '='
  dataout[0] = acc_left >> 15;
  ~~~~~~~~~~ ^ ~~~~~~~~~~~~~~
fir/fir_filter.cpp:10:8: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'typename ap_int_base<64, true>::RType<64, true>::arg1' (aka 'ap_int<64>') to 'const ap_axis_custom' for 1st argument; 
struct ap_axis_custom
       ^
fir/fir_filter.cpp:80:16: error: no matching conversion for C-style cast from 'ap_axis_custom' to 'acc_t' (aka 'ap_int<64>')
  acc_right += (acc_t) datain[1]* (acc_t) c[0];
               ^~~~~~~~~~~~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:62:8: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<64>' for 1st argument; 
struct ap_int : ap_int_base<_AP_W, true> {
       ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:154:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'bool' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(bool val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:155:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:156:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'signed char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(signed char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:157:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:158:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'short' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(short val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:159:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned short' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned short val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:160:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'int' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(int val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:161:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned int' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned int val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:162:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'long' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(long val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:163:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned long' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned long val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:164:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'ap_slong' (aka 'long long') for 1st argument; 
  inline __attribute__((always_inline)) ap_int(ap_slong val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:165:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'ap_ulong' (aka 'unsigned long long') for 1st argument; 
  inline __attribute__((always_inline)) ap_int(ap_ulong val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:167:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'double' for 1st argument; 
  ap_int(double val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:168:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'float' for 1st argument; 
  ap_int(float val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:169:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'half' for 1st argument; 
  ap_int(half val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:172:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'const char *' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(const char* s) : Base(s) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:67:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_int<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:72:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const volatile ap_int<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:77:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_uint<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:82:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const volatile ap_uint<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:96:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_range_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:99:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_bit_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:102:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>& ref)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:107:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_fixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:112:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_ufixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:118:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:124:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:130:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_int_base<_AP_W2, _AP_S2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:136:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:142:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:148:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:65:41: note: candidate constructor not viable: requires 0 arguments, but 1 was provided
  inline __attribute__((always_inline)) ap_int() : Base() {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:174:41: note: candidate constructor not viable: requires 2 arguments, but 1 was provided
  inline __attribute__((always_inline)) ap_int(const char* s, signed char rd) : Base(s, rd) {}
                                        ^
In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:81:22: error: no viable overloaded '='
  shift_reg_right[0] = datain[1];
  ~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:179:49: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) ap_int& operator=(const ap_int<_AP_W>& op2) {
                                                ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:185:49: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const volatile ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) ap_int& operator=(const volatile ap_int<_AP_W>& op2) {
                                                ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:191:46: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) void operator=(const ap_int<_AP_W>& op2) volatile { Base::V = op2.V; }
                                             ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:193:46: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const volatile ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) void operator=(const volatile ap_int<_AP_W>& op2) volatile {
                                             ^
In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:84:14: error: no viable overloaded '='
  dataout[1] = acc_right >> 15;
  ~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~
fir/fir_filter.cpp:10:8: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'typename ap_int_base<64, true>::RType<64, true>::arg1' (aka 'ap_int<64>') to 'const ap_axis_custom' for 1st argument; 
struct ap_axis_custom
       ^
6 errors generated.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'fir/fir_filter.cpp' ... 
ERROR: [HLS 200-70] Compilation errors found: In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:60:15: error: no matching conversion for C-style cast from 'ap_axis_custom' to 'acc_t' (aka 'ap_int<64>')
  acc_left += (acc_t) datain[0] * (acc_t) c[0];
              ^~~~~~~~~~~~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:62:8: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<64>' for 1st argument; 
struct ap_int : ap_int_base<_AP_W, true> {
       ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:154:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'bool' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(bool val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:155:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:156:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'signed char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(signed char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:157:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:158:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'short' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(short val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:159:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned short' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned short val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:160:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'int' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(int val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:161:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned int' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned int val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:162:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'long' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(long val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:163:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned long' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned long val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:164:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'ap_slong' (aka 'long long') for 1st argument; 
  inline __attribute__((always_inline)) ap_int(ap_slong val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:165:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'ap_ulong' (aka 'unsigned long long') for 1st argument; 
  inline __attribute__((always_inline)) ap_int(ap_ulong val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:167:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'double' for 1st argument; 
  ap_int(double val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:168:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'float' for 1st argument; 
  ap_int(float val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:169:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'half' for 1st argument; 
  ap_int(half val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:172:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'const char *' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(const char* s) : Base(s) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:67:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_int<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:72:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const volatile ap_int<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:77:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_uint<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:82:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const volatile ap_uint<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:96:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_range_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:99:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_bit_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:102:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>& ref)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:107:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_fixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:112:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_ufixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:118:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:124:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:130:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_int_base<_AP_W2, _AP_S2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:136:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:142:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:148:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:65:41: note: candidate constructor not viable: requires 0 arguments, but 1 was provided
  inline __attribute__((always_inline)) ap_int() : Base() {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:174:41: note: candidate constructor not viable: requires 2 arguments, but 1 was provided
  inline __attribute__((always_inline)) ap_int(const char* s, signed char rd) : Base(s, rd) {}
                                        ^
In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:61:21: error: no viable overloaded '='
  shift_reg_left[0] = datain[0];
  ~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:179:49: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) ap_int& operator=(const ap_int<_AP_W>& op2) {
                                                ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:185:49: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const volatile ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) ap_int& operator=(const volatile ap_int<_AP_W>& op2) {
                                                ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:191:46: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) void operator=(const ap_int<_AP_W>& op2) volatile { Base::V = op2.V; }
                                             ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:193:46: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const volatile ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) void operator=(const volatile ap_int<_AP_W>& op2) volatile {
                                             ^
In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:64:14: error: no viable overloaded '='
  dataout[0] = acc_left >> 15;
  ~~~~~~~~~~ ^ ~~~~~~~~~~~~~~
fir/fir_filter.cpp:10:8: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'typename ap_int_base<64, true>::RType<64, true>::arg1' (aka 'ap_int<64>') to 'const ap_axis_custom' for 1st argument; 
struct ap_axis_custom
       ^
fir/fir_filter.cpp:80:16: error: no matching conversion for C-style cast from 'ap_axis_custom' to 'acc_t' (aka 'ap_int<64>')
  acc_right += (acc_t) datain[1]* (acc_t) c[0];
               ^~~~~~~~~~~~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:62:8: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<64>' for 1st argument; 
struct ap_int : ap_int_base<_AP_W, true> {
       ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:154:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'bool' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(bool val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:155:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:156:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'signed char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(signed char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:157:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned char' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned char val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:158:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'short' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(short val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:159:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned short' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned short val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:160:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'int' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(int val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:161:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned int' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned int val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:162:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'long' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(long val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:163:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'unsigned long' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(unsigned long val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:164:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'ap_slong' (aka 'long long') for 1st argument; 
  inline __attribute__((always_inline)) ap_int(ap_slong val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:165:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'ap_ulong' (aka 'unsigned long long') for 1st argument; 
  inline __attribute__((always_inline)) ap_int(ap_ulong val) { Base::V = val; }
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:167:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'double' for 1st argument; 
  ap_int(double val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:168:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'float' for 1st argument; 
  ap_int(float val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:169:3: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'half' for 1st argument; 
  ap_int(half val) : Base(val) {}
  ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:172:41: note: candidate constructor not viable: no known conversion from 'ap_axis_custom' to 'const char *' for 1st argument; 
  inline __attribute__((always_inline)) ap_int(const char* s) : Base(s) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:67:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_int<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:72:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const volatile ap_int<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:77:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_uint<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:82:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const volatile ap_uint<_AP_W2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:96:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_range_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:99:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_bit_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:102:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>& ref)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:107:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_fixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:112:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_ufixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:118:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:124:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:130:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(const ap_int_base<_AP_W2, _AP_S2>& op) {
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:136:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:142:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:148:41: note: candidate template ignored: failed template argument deduction
  inline __attribute__((always_inline)) ap_int(
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:65:41: note: candidate constructor not viable: requires 0 arguments, but 1 was provided
  inline __attribute__((always_inline)) ap_int() : Base() {}
                                        ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:174:41: note: candidate constructor not viable: requires 2 arguments, but 1 was provided
  inline __attribute__((always_inline)) ap_int(const char* s, signed char rd) : Base(s, rd) {}
                                        ^
In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:81:22: error: no viable overloaded '='
  shift_reg_right[0] = datain[1];
  ~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:179:49: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) ap_int& operator=(const ap_int<_AP_W>& op2) {
                                                ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:185:49: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const volatile ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) ap_int& operator=(const volatile ap_int<_AP_W>& op2) {
                                                ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:191:46: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) void operator=(const ap_int<_AP_W>& op2) volatile { Base::V = op2.V; }
                                             ^
C:/Xilinx/Vivado/2019.2/common/technology/autopilot/ap_int.h:193:46: note: candidate function not viable: no known conversion from 'ap_axis_custom' to 'const volatile ap_int<32>' for 1st argument; 
  inline __attribute__((always_inline)) void operator=(const volatile ap_int<_AP_W>& op2) volatile {
                                             ^
In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:84:14: error: no viable overloaded '='
  dataout[1] = acc_right >> 15;
  ~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~
fir/fir_filter.cpp:10:8: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'typename ap_int_base<64, true>::RType<64, true>::arg1' (aka 'ap_int<64>') to 'const ap_axis_custom' for 1st argument; 
struct ap_axis_custom
       ^
6 errors generated.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'fir/fir_filter.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 198.063 ; gain = 108.398
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 198.063 ; gain = 108.398
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 198.063 ; gain = 108.398
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 198.063 ; gain = 108.398
WARNING: [XFORM 203-1103] Ignored data pack directive on non-struct variable 'dataout.data.V' (fir/fir_filter.cpp:20).
WARNING: [XFORM 203-1103] Ignored data pack directive on non-struct variable 'datain.data.V' (fir/fir_filter.cpp:20).
ERROR: [XFORM 203-801] Cannot group accesses on AXI-Stream ports: Partial write on a group of ports: dataout.data.V (fir/fir_filter.cpp:20), dataout.last.V (fir/fir_filter.cpp:20) (fir/fir_filter.cpp:78:21).
ERROR: [HLS 200-70] Pre-synthesis failed.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'fir/fir_filter.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 198.004 ; gain = 105.590
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 198.004 ; gain = 105.590
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 198.004 ; gain = 105.590
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 198.004 ; gain = 105.590
WARNING: [XFORM 203-1103] Ignored data pack directive on non-struct variable 'dataout.data.V' (fir/fir_filter.cpp:20).
WARNING: [XFORM 203-1103] Ignored data pack directive on non-struct variable 'datain.data.V' (fir/fir_filter.cpp:20).
ERROR: [XFORM 203-801] Cannot group accesses on AXI-Stream ports: Partial write on a group of ports: dataout.data.V (fir/fir_filter.cpp:20), dataout.keep.V (fir/fir_filter.cpp:20), dataout.strb.V (fir/fir_filter.cpp:20), dataout.last.V (fir/fir_filter.cpp:20) (fir/fir_filter.cpp:78:21).
ERROR: [HLS 200-70] Pre-synthesis failed.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'fir/fir_filter.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:10 . Memory (MB): peak = 198.477 ; gain = 109.184
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:10 . Memory (MB): peak = 198.477 ; gain = 109.184
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 198.477 ; gain = 109.184
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 198.477 ; gain = 109.184
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 198.477 ; gain = 109.184
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_left.V' (fir/fir_filter.cpp:47:5)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_left.V' (fir/fir_filter.cpp:52:3)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_right.V' (fir/fir_filter.cpp:67:5)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_right.V' (fir/fir_filter.cpp:72:3)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 198.477 ; gain = 109.184
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fir_filter' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fir_filter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 11.298 seconds; current allocated memory: 118.688 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.117 seconds; current allocated memory: 118.980 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fir_filter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/datain_data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/datain_last_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/dataout_data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/dataout_last_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fir_filter' to 'ap_ctrl_hs'.
INFO: [SYN 201-210] Renamed object name 'fir_filter_shift_reg_left_V' to 'fir_filter_shift_bkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'fir_filter_shift_reg_right_V' to 'fir_filter_shift_cud' due to the length limit 20
WARNING: [RTGEN 206-101] Port 'fir_filter/datain_last_V_address0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/datain_last_V_address0' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/datain_last_V_ce0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/datain_last_V_ce0' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/datain_last_V_we0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/datain_last_V_we0' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/datain_last_V_d0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/datain_last_V_d0' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/datain_last_V_q0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'fir_filter/datain_last_V_address1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/datain_last_V_address1' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/datain_last_V_ce1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/datain_last_V_ce1' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/datain_last_V_we1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/datain_last_V_we1' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/datain_last_V_d1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/datain_last_V_d1' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/datain_last_V_q1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'fir_filter/dataout_last_V_address0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/dataout_last_V_address0' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/dataout_last_V_ce0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/dataout_last_V_ce0' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/dataout_last_V_we0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/dataout_last_V_we0' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/dataout_last_V_d0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/dataout_last_V_d0' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/dataout_last_V_q0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'fir_filter/dataout_last_V_address1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/dataout_last_V_address1' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/dataout_last_V_ce1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/dataout_last_V_ce1' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/dataout_last_V_we1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/dataout_last_V_we1' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/dataout_last_V_d1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/dataout_last_V_d1' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/dataout_last_V_q1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fir_filter'.
INFO: [HLS 200-111]  Elapsed time: 0.448 seconds; current allocated memory: 119.600 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 117.51 MHz
INFO: [RTMG 210-278] Implementing memory 'fir_filter_shift_bkb_ram (RAM)' using block RAMs with power-on initialization.
INFO: [RTMG 210-279] Implementing memory 'fir_filter_c_rom' using distributed ROMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:02 ; elapsed = 00:00:14 . Memory (MB): peak = 198.477 ; gain = 109.184
INFO: [VHDL 208-304] Generating VHDL RTL for fir_filter.
INFO: [VLOG 209-307] Generating Verilog RTL for fir_filter.
INFO: [HLS 200-112] Total elapsed time: 13.736 seconds; peak allocated memory: 119.600 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'fir/fir_filter.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:10 . Memory (MB): peak = 197.508 ; gain = 105.129
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:10 . Memory (MB): peak = 197.508 ; gain = 105.129
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 197.508 ; gain = 105.129
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 197.508 ; gain = 105.129
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 197.508 ; gain = 105.129
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_left.V' (fir/fir_filter.cpp:47:5)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_left.V' (fir/fir_filter.cpp:52:3)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_right.V' (fir/fir_filter.cpp:67:5)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_right.V' (fir/fir_filter.cpp:72:3)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 197.508 ; gain = 105.129
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fir_filter' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fir_filter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 11.377 seconds; current allocated memory: 118.626 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.115 seconds; current allocated memory: 118.948 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fir_filter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/datain_data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/datain_last_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/dataout_data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/dataout_last_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fir_filter' to 'ap_ctrl_hs'.
INFO: [SYN 201-210] Renamed object name 'fir_filter_shift_reg_left_V' to 'fir_filter_shift_bkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'fir_filter_shift_reg_right_V' to 'fir_filter_shift_cud' due to the length limit 20
WARNING: [RTGEN 206-101] Port 'fir_filter/datain_last_V_address0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/datain_last_V_address0' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/datain_last_V_ce0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/datain_last_V_ce0' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/datain_last_V_we0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/datain_last_V_we0' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/datain_last_V_d0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/datain_last_V_d0' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/datain_last_V_q0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'fir_filter/datain_last_V_address1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/datain_last_V_address1' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/datain_last_V_ce1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/datain_last_V_ce1' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/datain_last_V_we1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/datain_last_V_we1' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/datain_last_V_d1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/datain_last_V_d1' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/datain_last_V_q1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'fir_filter/dataout_last_V_address0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/dataout_last_V_address0' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/dataout_last_V_ce0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/dataout_last_V_ce0' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/dataout_last_V_we0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/dataout_last_V_we0' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/dataout_last_V_d0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/dataout_last_V_d0' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/dataout_last_V_q0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'fir_filter/dataout_last_V_address1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/dataout_last_V_address1' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/dataout_last_V_ce1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/dataout_last_V_ce1' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/dataout_last_V_we1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/dataout_last_V_we1' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/dataout_last_V_d1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fir_filter/dataout_last_V_d1' to 0.
WARNING: [RTGEN 206-101] Port 'fir_filter/dataout_last_V_q1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fir_filter'.
INFO: [HLS 200-111]  Elapsed time: 0.473 seconds; current allocated memory: 119.584 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 117.51 MHz
INFO: [RTMG 210-278] Implementing memory 'fir_filter_shift_bkb_ram (RAM)' using block RAMs with power-on initialization.
INFO: [RTMG 210-279] Implementing memory 'fir_filter_c_rom' using distributed ROMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:02 ; elapsed = 00:00:14 . Memory (MB): peak = 197.508 ; gain = 105.129
INFO: [VHDL 208-304] Generating VHDL RTL for fir_filter.
INFO: [VLOG 209-307] Generating Verilog RTL for fir_filter.
INFO: [HLS 200-112] Total elapsed time: 13.771 seconds; peak allocated memory: 119.584 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'fir/fir_filter.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 197.969 ; gain = 108.625
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 197.969 ; gain = 108.625
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 197.969 ; gain = 108.625
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 197.969 ; gain = 108.625
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 197.969 ; gain = 108.625
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_left.V' (fir/fir_filter.cpp:49:5)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_left.V' (fir/fir_filter.cpp:54:3)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_right.V' (fir/fir_filter.cpp:69:5)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_right.V' (fir/fir_filter.cpp:74:3)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 197.969 ; gain = 108.625
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fir_filter' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fir_filter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 11.69 seconds; current allocated memory: 117.627 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.107 seconds; current allocated memory: 117.910 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fir_filter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/datain_data_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/dataout_data_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'fir_filter' to 'ap_ctrl_hs'.
INFO: [SYN 201-210] Renamed object name 'fir_filter_shift_reg_left_V' to 'fir_filter_shift_bkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'fir_filter_shift_reg_right_V' to 'fir_filter_shift_cud' due to the length limit 20
INFO: [RTGEN 206-100] Finished creating RTL model for 'fir_filter'.
INFO: [HLS 200-111]  Elapsed time: 0.157 seconds; current allocated memory: 118.542 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 117.51 MHz
INFO: [RTMG 210-278] Implementing memory 'fir_filter_shift_bkb_ram (RAM)' using block RAMs with power-on initialization.
INFO: [RTMG 210-279] Implementing memory 'fir_filter_c_rom' using distributed ROMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:02 ; elapsed = 00:00:14 . Memory (MB): peak = 197.969 ; gain = 108.625
INFO: [VHDL 208-304] Generating VHDL RTL for fir_filter.
INFO: [VLOG 209-307] Generating Verilog RTL for fir_filter.
INFO: [HLS 200-112] Total elapsed time: 13.691 seconds; peak allocated memory: 118.542 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'fir/fir_filter.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 198.121 ; gain = 108.555
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 198.121 ; gain = 108.555
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 198.121 ; gain = 108.555
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 198.121 ; gain = 108.555
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 198.121 ; gain = 108.555
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_left.V' (fir/fir_filter.cpp:49:5)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_left.V' (fir/fir_filter.cpp:54:3)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_right.V' (fir/fir_filter.cpp:69:5)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_right.V' (fir/fir_filter.cpp:74:3)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 198.121 ; gain = 108.555
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fir_filter' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fir_filter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 12.074 seconds; current allocated memory: 117.799 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.112 seconds; current allocated memory: 118.088 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fir_filter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/datain_data_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/dataout_data_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'fir_filter' to 'ap_ctrl_none'.
INFO: [SYN 201-210] Renamed object name 'fir_filter_shift_reg_left_V' to 'fir_filter_shift_bkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'fir_filter_shift_reg_right_V' to 'fir_filter_shift_cud' due to the length limit 20
INFO: [RTGEN 206-100] Finished creating RTL model for 'fir_filter'.
INFO: [HLS 200-111]  Elapsed time: 0.156 seconds; current allocated memory: 118.731 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 117.51 MHz
INFO: [RTMG 210-278] Implementing memory 'fir_filter_shift_bkb_ram (RAM)' using block RAMs with power-on initialization.
INFO: [RTMG 210-279] Implementing memory 'fir_filter_c_rom' using distributed ROMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:02 ; elapsed = 00:00:14 . Memory (MB): peak = 198.121 ; gain = 108.555
INFO: [VHDL 208-304] Generating VHDL RTL for fir_filter.
INFO: [VLOG 209-307] Generating Verilog RTL for fir_filter.
INFO: [HLS 200-112] Total elapsed time: 14.007 seconds; peak allocated memory: 118.731 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'fir/fir_filter.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 197.684 ; gain = 105.352
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 197.684 ; gain = 105.352
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 197.684 ; gain = 105.352
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 197.684 ; gain = 105.352
WARNING: [XFORM 203-1103] Ignored data pack directive on non-struct variable 'dataout.data.V' (fir/fir_filter.cpp:19).
WARNING: [XFORM 203-1103] Ignored data pack directive on non-struct variable 'datain.data.V' (fir/fir_filter.cpp:19).
ERROR: [XFORM 203-123] Cannot stream  'datain.last.V': The entries are not accessed in sequential order.
ERROR: [HLS 200-70] Pre-synthesis failed.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'fir/fir_filter.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 198.051 ; gain = 108.008
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 198.051 ; gain = 108.008
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 198.051 ; gain = 108.008
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 198.051 ; gain = 108.008
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 198.051 ; gain = 108.008
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_left.V' (fir/fir_filter.cpp:41:5)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_left.V' (fir/fir_filter.cpp:46:3)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_right.V' (fir/fir_filter.cpp:61:5)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_right.V' (fir/fir_filter.cpp:66:3)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 198.051 ; gain = 108.008
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fir_filter' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fir_filter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 11.744 seconds; current allocated memory: 117.798 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 118.089 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fir_filter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/datain_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/dataout_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fir_filter' to 'ap_ctrl_none'.
INFO: [SYN 201-210] Renamed object name 'fir_filter_shift_reg_left_V' to 'fir_filter_shift_bkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'fir_filter_shift_reg_right_V' to 'fir_filter_shift_cud' due to the length limit 20
INFO: [RTGEN 206-100] Finished creating RTL model for 'fir_filter'.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 118.675 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 117.51 MHz
INFO: [RTMG 210-278] Implementing memory 'fir_filter_shift_bkb_ram (RAM)' using block RAMs with power-on initialization.
INFO: [RTMG 210-279] Implementing memory 'fir_filter_c_rom' using distributed ROMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:02 ; elapsed = 00:00:14 . Memory (MB): peak = 198.051 ; gain = 108.008
INFO: [VHDL 208-304] Generating VHDL RTL for fir_filter.
INFO: [VLOG 209-307] Generating Verilog RTL for fir_filter.
INFO: [HLS 200-112] Total elapsed time: 13.717 seconds; peak allocated memory: 118.675 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'fir/fir_filter.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 198.043 ; gain = 107.750
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 198.043 ; gain = 107.750
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 198.043 ; gain = 107.750
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 198.043 ; gain = 107.750
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 198.043 ; gain = 107.750
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_left.V' (fir/fir_filter.cpp:41:5)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_left.V' (fir/fir_filter.cpp:46:3)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_right.V' (fir/fir_filter.cpp:61:5)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_right.V' (fir/fir_filter.cpp:66:3)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 198.043 ; gain = 107.750
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fir_filter' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fir_filter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 12.155 seconds; current allocated memory: 117.809 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.113 seconds; current allocated memory: 118.099 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fir_filter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/datain_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/dataout_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'fir_filter' to 'ap_ctrl_none'.
INFO: [SYN 201-210] Renamed object name 'fir_filter_shift_reg_left_V' to 'fir_filter_shift_bkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'fir_filter_shift_reg_right_V' to 'fir_filter_shift_cud' due to the length limit 20
INFO: [RTGEN 206-100] Finished creating RTL model for 'fir_filter'.
INFO: [HLS 200-111]  Elapsed time: 0.162 seconds; current allocated memory: 118.741 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 117.51 MHz
INFO: [RTMG 210-278] Implementing memory 'fir_filter_shift_bkb_ram (RAM)' using block RAMs with power-on initialization.
INFO: [RTMG 210-279] Implementing memory 'fir_filter_c_rom' using distributed ROMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:02 ; elapsed = 00:00:14 . Memory (MB): peak = 198.043 ; gain = 107.750
INFO: [VHDL 208-304] Generating VHDL RTL for fir_filter.
INFO: [VLOG 209-307] Generating Verilog RTL for fir_filter.
INFO: [HLS 200-112] Total elapsed time: 14.22 seconds; peak allocated memory: 118.741 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'fir/fir_filter.cpp' ... 
ERROR: [HLS 200-70] Compilation errors found: In file included from fir/fir_filter.cpp:1:
fir/fir_filter.cpp:58:14: error: no viable overloaded '='
  dataout[0] = acc_left >> 15;
  ~~~~~~~~~~ ^ ~~~~~~~~~~~~~~
fir/fir_filter.cpp:10:10: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'typename ap_int_base<64, true>::RType<64, true>::arg1' (aka 'ap_int<64>') to 'const ap_axis_custom' for 1st argument; 
  struct ap_axis_custom {
         ^
1 error generated.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'fir/fir_filter.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 198.238 ; gain = 108.285
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 198.238 ; gain = 108.285
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 198.238 ; gain = 108.285
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 198.238 ; gain = 108.285
WARNING: [XFORM 203-1103] Ignored data pack directive on non-struct variable 'dataout.data.V' (fir/fir_filter.cpp:17).
WARNING: [XFORM 203-1103] Ignored data pack directive on non-struct variable 'datain.data.V' (fir/fir_filter.cpp:17).
ERROR: [XFORM 203-801] Cannot group accesses on AXI-Stream ports: Partial write on a group of ports: dataout.data.V (fir/fir_filter.cpp:17), dataout.last.V (fir/fir_filter.cpp:17) (fir/fir_filter.cpp:72:21).
ERROR: [HLS 200-70] Pre-synthesis failed.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'fir/fir_filter.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 197.707 ; gain = 107.367
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 197.707 ; gain = 107.367
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 197.707 ; gain = 107.367
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 197.707 ; gain = 107.367
WARNING: [XFORM 203-1103] Ignored data pack directive on non-struct variable 'dataout.data.V' (fir/fir_filter.cpp:17).
WARNING: [XFORM 203-1103] Ignored data pack directive on non-struct variable 'datain.data.V' (fir/fir_filter.cpp:17).
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:12 . Memory (MB): peak = 197.707 ; gain = 107.367
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_left.V' (fir/fir_filter.cpp:44:5)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_left.V' (fir/fir_filter.cpp:49:3)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_right.V' (fir/fir_filter.cpp:64:5)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_right.V' (fir/fir_filter.cpp:69:3)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:12 . Memory (MB): peak = 197.707 ; gain = 107.367
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fir_filter' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fir_filter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 12.222 seconds; current allocated memory: 119.105 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.111 seconds; current allocated memory: 119.405 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fir_filter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/datain_data_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/datain_last_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/dataout_data_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/dataout_last_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'fir_filter' to 'ap_ctrl_none'.
INFO: [SYN 201-210] Renamed object name 'fir_filter_shift_reg_left_V' to 'fir_filter_shift_bkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'fir_filter_shift_reg_right_V' to 'fir_filter_shift_cud' due to the length limit 20
INFO: [RTGEN 206-100] Finished creating RTL model for 'fir_filter'.
INFO: [HLS 200-111]  Elapsed time: 0.171 seconds; current allocated memory: 120.061 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 117.51 MHz
INFO: [RTMG 210-278] Implementing memory 'fir_filter_shift_bkb_ram (RAM)' using block RAMs with power-on initialization.
INFO: [RTMG 210-279] Implementing memory 'fir_filter_c_rom' using distributed ROMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:03 ; elapsed = 00:00:14 . Memory (MB): peak = 197.707 ; gain = 107.367
INFO: [VHDL 208-304] Generating VHDL RTL for fir_filter.
INFO: [VLOG 209-307] Generating Verilog RTL for fir_filter.
INFO: [HLS 200-112] Total elapsed time: 14.192 seconds; peak allocated memory: 120.061 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'fir/fir_filter.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 197.727 ; gain = 107.613
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 197.727 ; gain = 107.613
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 197.727 ; gain = 107.613
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 197.727 ; gain = 107.613
WARNING: [XFORM 203-1103] Ignored data pack directive on non-struct variable 'dataout.data.V' (fir/fir_filter.cpp:17).
WARNING: [XFORM 203-1103] Ignored data pack directive on non-struct variable 'datain.data.V' (fir/fir_filter.cpp:17).
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 197.727 ; gain = 107.613
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_left.V' (fir/fir_filter.cpp:44:5)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_left.V' (fir/fir_filter.cpp:49:3)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_right.V' (fir/fir_filter.cpp:64:5)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_right.V' (fir/fir_filter.cpp:69:3)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:12 . Memory (MB): peak = 197.727 ; gain = 107.613
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fir_filter' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fir_filter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 12.162 seconds; current allocated memory: 119.059 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.114 seconds; current allocated memory: 119.364 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fir_filter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/datain_data_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/datain_last_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/dataout_data_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/dataout_last_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'fir_filter' to 'ap_ctrl_none'.
INFO: [SYN 201-210] Renamed object name 'fir_filter_shift_reg_left_V' to 'fir_filter_shift_bkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'fir_filter_shift_reg_right_V' to 'fir_filter_shift_cud' due to the length limit 20
INFO: [RTGEN 206-100] Finished creating RTL model for 'fir_filter'.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 120.027 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 117.51 MHz
INFO: [RTMG 210-278] Implementing memory 'fir_filter_shift_bkb_ram (RAM)' using block RAMs with power-on initialization.
INFO: [RTMG 210-279] Implementing memory 'fir_filter_c_rom' using distributed ROMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:02 ; elapsed = 00:00:14 . Memory (MB): peak = 197.727 ; gain = 107.613
INFO: [VHDL 208-304] Generating VHDL RTL for fir_filter.
INFO: [VLOG 209-307] Generating Verilog RTL for fir_filter.
INFO: [HLS 200-112] Total elapsed time: 14.132 seconds; peak allocated memory: 120.027 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'fir/fir_filter.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 198.141 ; gain = 108.734
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 198.141 ; gain = 108.734
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 198.141 ; gain = 108.734
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 198.141 ; gain = 108.734
WARNING: [XFORM 203-1103] Ignored data pack directive on non-struct variable 'dataout.data.V' (fir/fir_filter.cpp:17).
WARNING: [XFORM 203-1103] Ignored data pack directive on non-struct variable 'datain.data.V' (fir/fir_filter.cpp:17).
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 198.141 ; gain = 108.734
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_left.V' (fir/fir_filter.cpp:44:5)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_left.V' (fir/fir_filter.cpp:49:3)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_right.V' (fir/fir_filter.cpp:64:5)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_right.V' (fir/fir_filter.cpp:69:3)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:12 . Memory (MB): peak = 198.141 ; gain = 108.734
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fir_filter' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fir_filter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 12.304 seconds; current allocated memory: 119.059 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.114 seconds; current allocated memory: 119.364 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fir_filter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/datain_data_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/datain_last_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/dataout_data_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/dataout_last_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'fir_filter' to 'ap_ctrl_none'.
INFO: [SYN 201-210] Renamed object name 'fir_filter_shift_reg_left_V' to 'fir_filter_shift_bkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'fir_filter_shift_reg_right_V' to 'fir_filter_shift_cud' due to the length limit 20
INFO: [RTGEN 206-100] Finished creating RTL model for 'fir_filter'.
INFO: [HLS 200-111]  Elapsed time: 0.166 seconds; current allocated memory: 120.027 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 117.51 MHz
INFO: [RTMG 210-278] Implementing memory 'fir_filter_shift_bkb_ram (RAM)' using block RAMs with power-on initialization.
INFO: [RTMG 210-279] Implementing memory 'fir_filter_c_rom' using distributed ROMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:02 ; elapsed = 00:00:14 . Memory (MB): peak = 198.141 ; gain = 108.734
INFO: [VHDL 208-304] Generating VHDL RTL for fir_filter.
INFO: [VLOG 209-307] Generating Verilog RTL for fir_filter.
INFO: [HLS 200-112] Total elapsed time: 14.213 seconds; peak allocated memory: 120.027 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [IMPL 213-8] Exporting RTL as a Vivado IP.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [IMPL 213-8] Exporting RTL as a Vivado IP.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'fir/fir_filter.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:13 . Memory (MB): peak = 197.641 ; gain = 107.465
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:13 . Memory (MB): peak = 197.641 ; gain = 107.465
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:14 . Memory (MB): peak = 197.641 ; gain = 107.465
INFO: [HLS 200-10] Checking synthesizability ...
ERROR: [SYNCHK 200-92] Port 'datain.data.V' (fir/fir_filter.cpp:17) of function 'fir_filter' cannot be set to a AXIS 
ERROR: [SYNCHK 200-92] as it has both write (fir/fir_filter.cpp:73:5) and read (fir/fir_filter.cpp:72:6) operations.
INFO: [SYNCHK 200-10] 1 error(s), 0 warning(s).
ERROR: [HLS 200-70] Synthesizability check failed.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'fir/fir_filter.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 197.262 ; gain = 104.930
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 197.262 ; gain = 104.930
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 197.262 ; gain = 104.930
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 197.262 ; gain = 104.930
WARNING: [XFORM 203-1103] Ignored data pack directive on non-struct variable 'dataout.data.V' (fir/fir_filter.cpp:17).
WARNING: [XFORM 203-1103] Ignored data pack directive on non-struct variable 'datain.data.V' (fir/fir_filter.cpp:17).
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 197.262 ; gain = 104.930
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_left.V' (fir/fir_filter.cpp:47:5)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_left.V' (fir/fir_filter.cpp:60:3)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_right.V' (fir/fir_filter.cpp:75:5)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg_right.V' (fir/fir_filter.cpp:88:3)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 197.262 ; gain = 104.930
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fir_filter' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fir_filter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 12.319 seconds; current allocated memory: 120.842 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.112 seconds; current allocated memory: 121.173 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fir_filter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/datain_data_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/datain_last_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/dataout_data_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'fir_filter/dataout_last_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'fir_filter' to 'ap_ctrl_none'.
INFO: [SYN 201-210] Renamed object name 'fir_filter_shift_reg_left_V' to 'fir_filter_shift_bkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'fir_filter_shift_reg_right_V' to 'fir_filter_shift_cud' due to the length limit 20
INFO: [RTGEN 206-100] Finished creating RTL model for 'fir_filter'.
INFO: [HLS 200-111]  Elapsed time: 0.176 seconds; current allocated memory: 121.907 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 117.51 MHz
INFO: [RTMG 210-278] Implementing memory 'fir_filter_shift_bkb_ram (RAM)' using block RAMs with power-on initialization.
INFO: [RTMG 210-279] Implementing memory 'fir_filter_c_rom' using distributed ROMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:02 ; elapsed = 00:00:14 . Memory (MB): peak = 197.262 ; gain = 104.930
INFO: [VHDL 208-304] Generating VHDL RTL for fir_filter.
INFO: [VLOG 209-307] Generating Verilog RTL for fir_filter.
INFO: [HLS 200-112] Total elapsed time: 14.435 seconds; peak allocated memory: 121.907 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [IMPL 213-8] Exporting RTL as a Vivado IP.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z010-clg400-1'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'fir/fir_filter.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 198.078 ; gain = 105.684
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 198.078 ; gain = 105.684
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 198.078 ; gain = 105.684
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 198.078 ; gain = 105.684
WARNING: [XFORM 203-1103] Ignored data pack directive on non-struct variable 'dataout.data.V' (fir/fir_filter.cpp:19).
WARNING: [XFORM 203-1103] Ignored data pack directive on non-struct variable 'datain.data.V' (fir/fir_filter.cpp:19).
ERROR: [XFORM 203-123] Cannot stream  'dataout.last.V': The entries are not accessed in sequential order.
ERROR: [HLS 200-70] Pre-synthesis failed.
